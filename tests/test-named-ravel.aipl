!literal>arg

a b c
d e f g

# for an op with rankout=1, !op>var1>var2 will name the deepest (scalar) 'inner column' var2, and the outer column that contains the vector var1.

!split>line sep=\n

# make sure columns are named correctly
# and that named columns remain visible to a top-level json

!assert-json
[{"arg": "a b c\nd e f g", "input": [{"line": "a b c"}, {"line": "d e f g"}]}]

!split>chars>char

!assert-json

[{
    "arg": "a b c\nd e f g",
    "input": [
       {"line": "a b c",   "chars": [{"char": "a"}, {"char": "b"}, {"char": "c"}]},
       {"line": "d e f g", "chars": [{"char": "d"}, {"char": "e"}, {"char": "f"}, {"char": "g"}]}
     ]
}]

!ravel>letter

!join>out sep=.
!columns out

!assert-json
[{
    "out": "a.b.c.d.e.f.g"
}]

!print
