#!/usr/bin/env bin/aipl

# loads a JSON file from a hardcoded URL and accesses a sample from a list inside (AIPL idiomatic), filtering on string matching

# allow user to select if they want to filter by ironic=True/1 or False/0
!require-input
keyword search
!split>keyword sep=\n

# load the JSON
!format
https://raw.githubusercontent.com/google/BIG-bench/main/bigbench/benchmark_tasks/irony_identification/task.json
!fetch-url

# access 'examples' list in JSON blob
# TODO in operator: use the column name as name in the table? otherwise why pass the example= in?
!json-parse examples=examples

# map each element to its 'input' attribute
!format>statement
{input}

# find statements that have keyword
!match {keyword}
!filter
!print

# TODO: breaks! shouldn't it not?
# !format
# {keyword}

# TODO: breaks! we might want to be able to do something like this, to either 
# 1) trim the entire table of extaneous stuff in order to save some of it to json or 
# 2) actually ravel it all into a 1D table, which would mean duplicating the value of `keyword` across 
# !columns keyword statement
# !ravel
